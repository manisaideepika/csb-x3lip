{"version":3,"sources":["Component/Emform.js","App.js","index.js"],"names":["Emform","useState","name","department","rating","userRegistration","setUserRegistration","employee","setEmployee","btnc","setbtnc","handleInput","e","target","value","action","onSubmit","preventDefault","newEmployee","id","Date","getTime","toString","htmlFor","type","autoComplete","onChange","className","map","currentElement","onClick","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"kOA6GeA,EA1GA,WACb,MAAgDC,mBAAS,CACvDC,KAAM,GACNC,WAAY,GACZC,OAAQ,KAHV,mBAAOC,EAAP,KAAyBC,EAAzB,KAMA,EAAgCL,mBAAS,IAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KACA,EAAwBP,oBAAS,GAAjC,mBAAOQ,EAAP,KAAaC,EAAb,KAEMC,EAAc,SAACC,GACnB,IAAMV,EAAOU,EAAEC,OAAOX,KAChBY,EAAQF,EAAEC,OAAOC,MAEvBR,EAAoB,2BAAKD,GAAN,kBAAyBH,EAAOY,MAoBrD,OACE,gCACE,wDACCL,EAAO,KACN,uBAAMM,OAAO,GAAGC,SArBD,SAACJ,GACpBA,EAAEK,iBAEF,IAAMC,EAAW,2BACZb,GADY,IAEfc,IAAI,IAAIC,MAAOC,UAAUC,aAE3Bd,EAAY,GAAD,mBAAKD,GAAL,CAAeW,KAE1BZ,EAAoB,CAAEJ,KAAM,GAAIC,WAAY,GAAIC,OAAQ,KACxDM,GAAQ,IAWJ,UACE,gCACE,uBAAOa,QAAQ,OAAf,mBACA,uBACEC,KAAK,OACLtB,KAAK,OACLiB,GAAG,OACHM,aAAa,MACbX,MAAOT,EAAiBH,KACxBwB,SAAUf,OAId,gCACE,uBAAOY,QAAQ,aAAf,yBACA,uBACEC,KAAK,OACLtB,KAAK,aACLiB,GAAG,aACHM,aAAa,MACbX,MAAOT,EAAiBF,WACxBuB,SAAUf,OAId,gCACE,uBAAOY,QAAQ,SAAf,qBACA,uBACEC,KAAK,SACLtB,KAAK,SACLiB,GAAG,SACHM,aAAa,MACbX,MAAOT,EAAiBD,OACxBsB,SAAUf,OAId,uBAAOgB,UAAU,MAAMH,KAAK,SAASV,MAAM,cAI9CL,EACC,qBAAKkB,UAAU,SAAf,SACGpB,EAASqB,KAAI,SAACC,GACb,IAAQV,EAAiCU,EAAjCV,GAAIjB,EAA6B2B,EAA7B3B,KAAMC,EAAuB0B,EAAvB1B,WAAYC,EAAWyB,EAAXzB,OAC9B,OACE,qBAAKuB,UAAU,OAAf,SACE,oBAAGA,UAAU,SAAb,mBACSzB,EADT,kBAC8BC,EAD9B,cACqDC,MAF5Be,QAQ/B,KACJ,uBACCV,EACC,uBACEkB,UAAU,MACVG,QAnES,WACfpB,GAAQ,IAmEFc,KAAK,SACLV,MAAM,YAEN,SCrGK,SAASiB,IACtB,OACE,qBAAKJ,UAAU,MAAf,SACE,cAAC,EAAD,MCDN,IAAMK,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACL,EAAD,MAEFC,K","file":"static/js/main.30f0e572.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Sty.css\";\r\n\r\nconst Emform = () => {\r\n  const [userRegistration, setUserRegistration] = useState({\r\n    name: \"\",\r\n    department: \"\",\r\n    rating: \"\"\r\n  });\r\n\r\n  const [employee, setEmployee] = useState([]);\r\n  const [btnc, setbtnc] = useState(false);\r\n\r\n  const handleInput = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setUserRegistration({ ...userRegistration, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newEmployee = {\r\n      ...userRegistration,\r\n      id: new Date().getTime().toString()\r\n    };\r\n    setEmployee([...employee, newEmployee]);\r\n\r\n    setUserRegistration({ name: \"\", department: \"\", rating: \"\" });\r\n    setbtnc(true);\r\n  };\r\n\r\n  const gobckbtn = () => {\r\n    setbtnc(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>EMPLOYEE FEEDBACK FORM</h1>\r\n      {btnc ? null : (\r\n        <form action=\"\" onSubmit={handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"name\">Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              autoComplete=\"off\"\r\n              value={userRegistration.name}\r\n              onChange={handleInput}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"department\">Department:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"department\"\r\n              id=\"department\"\r\n              autoComplete=\"off\"\r\n              value={userRegistration.department}\r\n              onChange={handleInput}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"rating\">Rating:</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"rating\"\r\n              id=\"rating\"\r\n              autoComplete=\"off\"\r\n              value={userRegistration.rating}\r\n              onChange={handleInput}\r\n            />\r\n          </div>\r\n\r\n          <input className=\"btn\" type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n      )}\r\n\r\n      {btnc ? (\r\n        <div className=\"inform\">\r\n          {employee.map((currentElement) => {\r\n            const { id, name, department, rating } = currentElement;\r\n            return (\r\n              <div className=\"data\" key={id}>\r\n                <p className=\"inside\">\r\n                  Name: {name} | Department: {department} | Rating: {rating}\r\n                </p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : null}\r\n      <br />\r\n      {btnc ? (\r\n        <input\r\n          className=\"btn\"\r\n          onClick={gobckbtn}\r\n          type=\"button\"\r\n          value=\"Go Back\"\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Emform;\r\n","import \"./styles.css\";\nimport Emform from \"./Component/Emform\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Emform />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}